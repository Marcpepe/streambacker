---
- name: add repo file
  template: src=nginx.repo dest=/etc/yum.repos.d/nginx.repo mode=644 owner={{ app_user }} group={{ app_group }}
  tags:
  - nginx
  - packages

- name: install
  yum: name=nginx enablerepo=nginx state=latest
  tags:
  - nginx
  - packages
  - yum

- name: create working directories
  file: path={{ item }} state=directory mode=755 owner={{ app_user }} group={{ app_group }}
  with_items:
    - "{{ etc_path }}/nginx"
    - "{{ etc_path }}/nginx/conf.d"
    - "{{ log_path }}/nginx"
    - "{{ tmp_path }}/nginx"
  tags:
  - nginx
  - filesystem

- name: remove nginx conf file
  file: path=/etc/nginx/nginx.conf state=absent
  tags:
  - nginx
  - yum-cleaning

- name: disable service as sudo_user
  service: name=nginx enabled=no
  tags:
  - nginx
  - services
  - yum-cleaning

- name: remove default nginx conf
  file: path={{ item }} state=absent
  with_items:
  - "/etc/nginx/conf.d/default.conf"
  - "/etc/nginx/conf.d/example_ssl.conf"
  tags:
  - mothership
  - yum-cleaning

- name: create pid file
  file: path={{ var_path }}/run/nginx.pid state=touch mode=644 owner={{ app_user }} group={{ app_group }}
  tags:
  - nginx
  - yum-cleaning

- name: set correct right on nginx logs files
  file: path={{ item }} state=touch mode=644 owner={{ app_user }} group={{ app_group }}
  with_items:
    - "{{ log_path }}/nginx/host.access.log"
    - "{{ log_path }}/nginx/host.error.log"
    - "{{ log_path }}/nginx/access.log"
    - "{{ log_path }}/nginx/error.log"
  tags:
  - nginx
  - yum-cleaning

- name: adds init.d/nginx with custom paths
  template: src=nginx dest={{ init_path }}/nginx mode=755 owner={{ app_user }} group={{ app_group }}
  tags:
  - nginx
  - config
  notify: reload nginx

- name: adds nginx conf file
  template: src=nginx.conf dest={{ etc_path }}/nginx/nginx.conf mode=644 owner={{ app_user }} group={{ app_group }}
  tags:
  - nginx
  - config
  notify: reload nginx

- name: update mime types
  copy: src=etc/nginx/mime.types dest={{ etc_path }}/nginx/mime.types mode=644 owner={{ app_user }} group={{ app_group }}
  tags:
  - nginx
  - config
  notify: reload nginx

# Pas de prise en compte dans les environnements SG pour le moment
- name: adds logrotate.d/nginx with custom paths
  template: src=logrotate/nginx dest={{ etc_path }}/logrotate.d/nginx
  when: app_group == 'tnuv' or app_group == 'tnus'
  tags:
  - nginx
  - logrotate

- name: add controlM scripts
  template: src=scripts/{{ item }} dest={{ root_path }}/scripts/{{ item }} mode=774 owner={{ app_user }} group={{ app_group }}
  with_items:
  - nginx_restart.sh
  - nginx_start.sh
  - nginx_status.sh
  - nginx_stop.sh
  tags:
  - nginx
  - scripts
