## Customize the test machine
machine:

  timezone:
    Europe/Paris

  # Version of ruby to use
  node:
    version:
      '5'

  services:
    - docker

  # Override /etc/hosts
  # hosts:
    # circlehost: 127.0.0.1
    # dev.mycompany.com: 127.0.0.1

  # Add some environment variables
  environment:
    # CIRCLE_ENV: test
    DOCKER_EMAIL: marc.perrinpelletier@gmail.com
    DOCKER_USERNAME: marcpepe

## Customize checkout
# checkout:
  # post:
    # - git submodule sync
    # - git submodule update --init # use submodules

## Customize dependencies
dependencies:
  # pre:
    # - npm install coffeescript # install from a different package manager
    # - gem uninstall bundler # use a custom version of bundler
    # - gem install bundler --pre

  # override:
    # - bundle install: # note ':' here
        # timeout: 180 # fail if command has no output for 3 minutes

  # we automatically cache and restore many dependencies between
  # builds. If you need to, you can add custom paths to cache:
  cache_directories:
    # - "node_modules"
    - "~/docker"

  override:
    - if [[ -e ~/docker/image.tar ]]; then docker load -i ~/docker/image.tar; else echo 'NO DOCKER IMAGE TO LOAD'; fi
    - docker build -t marcpepe/streambacker-server:latest .
    - mkdir -p ~/docker; docker save marcpepe/streambacker-server:latest  > ~/docker/image.tar

## Customize database setup
# database:
  # override:
    # # replace CircleCI's generated database.yml
    # - cp config/database.yml.ci config/database.yml
    # - bundle exec rake db:create db:schema:load

## Customize test commands
# test:
  # override:
    # - npm test
  # post:
    # - bundle exec rake jasmine:ci: # add an extra test type
        # environment:
          # RAILS_ENV: test
          # RACK_ENV: test

## Customize deployment commands
deployment:
  # dockerhub:
    # branch: staging
    # commands:
      # - ls ~/docker
      # - if [[ -e ~/docker/image.tar ]]; then docker load -i ~/docker/image.tar; fi
      # - docker build -t marcpepe/streambacker-server:latest .
      # - mkdir -p ~/docker; docker save marcpepe/streambacker-server  > ~/docker/image.tar
      # - docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      # - docker push marcpepe/streambacker-server
  staging:
    branch: staging
    commands:
      # - devops/scripts/push_to_dockerhub.sh
      # - if [[ -e ~/docker/image.tar ]]; then docker load -i ~/docker/image.tar; else echo 'NO DOCKER IMAGE TO LOAD'; fi
      # - docker build -t marcpepe/streambacker-server:latest .
      # - mkdir -p ~/docker; docker save marcpepe/streambacker-server  > ~/docker/image.tar
      - docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      - docker push marcpepe/streambacker-server
      - devops/scripts/deploy_to_aws.sh
  # production:
    # branch: master
    # commands:
      # - ./deploy_prod.sh

## Custom notifications
# notify:
  # webhooks:
    # - url: https://someurl.com/hooks/circle
